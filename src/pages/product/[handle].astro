---
import { actions } from "astro:actions";
import Footer from "../../components/layout/footer.astro";
import Layout from "../../components/layout/layout.astro";
import ProductDescription from "../../components/product/product-description.astro";
import RelatedProducts from "../../components/product/related-products.astro";
import { getProduct } from "../../lib/wix";
import SelectedVariantStore from "../../components/headless/SelectedVariantStore.astro";
import type { createSelectedVariantStore } from "../../components/headless/SelectedVariantStore";
import { ProductGallery } from "../../components/headless/ProductGallery";

const params = Astro.params;
const product = await getProduct(params.handle!);

if (!product) return new Response(null, { status: 404 });

const productJsonLd = {
  "@context": "https://schema.org",
  "@type": "Product",
  name: product.title,
  description: product.description,
  image: product.featuredImage.url,
  offers: {
    "@type": "AggregateOffer",
    availability: product.availableForSale
      ? "https://schema.org/InStock"
      : "https://schema.org/OutOfStock",
    priceCurrency: product.priceRange.minVariantPrice.currencyCode,
    highPrice: product.priceRange.maxVariantPrice.amount,
    lowPrice: product.priceRange.minVariantPrice.amount,
  },
};

---

<Layout>
  <script
    type="application/ld+json"
    set:html={JSON.stringify(productJsonLd)}
    is:inline
  />
  <form id="view-selections"></form>
  <form id="add-to-cart" method="post" action={actions.addItemToCart}></form>
  <div class="mx-auto max-w-screen-2xl px-4">
    <div
      class="flex flex-col rounded-lg border border-neutral-200 bg-white p-8 md:p-12 lg:flex-row lg:gap-8 dark:border-neutral-800 dark:bg-black"
    >
    <SelectedVariantStore>
      {
        (storeId: string) => (
          <div class="h-full w-full basis-full lg:basis-4/6">
              <ProductGallery client:wait-for-store={storeId} product={product.originalProduct} selectedVariantStoreId={storeId as string & ReturnType<typeof createSelectedVariantStore>} />
      </div>

      <div class="basis-full lg:basis-2/6">
        <ProductDescription product={product} selectedVariantStoreId={storeId as string & ReturnType<typeof createSelectedVariantStore>} />
      </div>
      )}
      </SelectedVariantStore>
    </div>

      
    <RelatedProducts id={product.id} />
  </div>

  <Footer />
</Layout>
